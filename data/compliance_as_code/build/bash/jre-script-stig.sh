###############################################################################
#
# Bash remediation role for profile stig
# Profile Title:  Java Runtime Environment (JRE) STIG
# Profile Description:
# The Java Runtime Environment (JRE) is a bundle developed
# and offered by Oracle Corporation which includes the Java Virtual Machine
# (JVM), class libraries, and other components necessary to run Java
# applications and applets. Certain default settings within the JRE pose
# a security risk so it is necessary to deploy system wide properties to
# ensure a higher degree of security when utilizing the JRE.
# 
# The IBM Corporation also develops and bundles the Java Runtime Environment
# (JRE) as well as Red Hat with OpenJDK.
#
# Benchmark ID:  JRE
# Benchmark Version:  0.1.50
#
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.2.17 using:
# 	$ oscap xccdf generate fix --profile stig --template urn:xccdf:fix:script:sh xccdf-file.xml 
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ sudo ./remediation-role.sh
#
###############################################################################

###############################################################################
# BEGIN fix (1 / 11) for 'java_jre_validation_ocsp_locked'
###############################################################################
(>&2 echo "Remediating rule 1/11: 'java_jre_validation_ocsp_locked'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.ocsp.locked$" ${JAVA_PROPERTIES} && \
sed -i "s/deployment.security.validation.ocsp\..*/deployment.security.validation.ocsp.locked/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.ocsp.locked" >> ${JAVA_PROPERTIES}
fi
# END fix for 'java_jre_validation_ocsp_locked'

###############################################################################
# BEGIN fix (2 / 11) for 'java_jre_validation_crl_locked'
###############################################################################
(>&2 echo "Remediating rule 2/11: 'java_jre_validation_crl_locked'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.crl.locked$" ${JAVA_PROPERTIES} && \
sed -i "s/deployment.security.validation.crl\..*/deployment.security.validation.crl.locked/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.crl.locked" >> ${JAVA_PROPERTIES}
fi
# END fix for 'java_jre_validation_crl_locked'

###############################################################################
# BEGIN fix (3 / 11) for 'java_jre_deployment_properties_exists'
###############################################################################
(>&2 echo "Remediating rule 3/11: 'java_jre_deployment_properties_exists'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"
JAVA_DIR="/etc/.java/deployment"

if [ ! -d ${JAVA_DIR} ] ; then
  mkdir -p -m 755 ${JAVA_DIR}
fi

if [ ! -e ${JAVA_PROPERTIES} ]; then
  touch ${JAVA_PROPERTIES} && chmod 644 ${JAVA_PROPERTIES}
fi

chmod 644 ${JAVA_PROPERTIES}
# END fix for 'java_jre_deployment_properties_exists'

###############################################################################
# BEGIN fix (4 / 11) for 'java_jre_untrusted_sources_locked'
###############################################################################
(>&2 echo "Remediating rule 4/11: 'java_jre_untrusted_sources_locked'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.askgrantdialog.notinca.locked$" ${JAVA_PROPERTIES} && \
sed -i "s/deployment.security.askgrantdialog.notinca\..*/deployment.security.askgrantdialog.notinca.locked/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.askgrantdialog.notinca.locked" >> ${JAVA_PROPERTIES}
fi
# END fix for 'java_jre_untrusted_sources_locked'

###############################################################################
# BEGIN fix (5 / 11) for 'java_jre_untrusted_sources'
###############################################################################
(>&2 echo "Remediating rule 5/11: 'java_jre_untrusted_sources'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.askgrantdialog.notinca=false$" ${JAVA_PROPERTIES} && \
sed -i "s/deployment.security.askgrantdialog.notinca=.*/deployment.security.askgrantdialog.notinca=false/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.askgrantdialog.notinca=false" >> ${JAVA_PROPERTIES}
fi
# END fix for 'java_jre_untrusted_sources'

###############################################################################
# BEGIN fix (6 / 11) for 'java_jre_validation_crl'
###############################################################################
(>&2 echo "Remediating rule 6/11: 'java_jre_validation_crl'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.crl=true$" ${JAVA_PROPERTIES} && \
sed -i "s/deployment.security.validation.crl=.*/deployment.security.validation.crl=true/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.crl=true" >> ${JAVA_PROPERTIES}
fi
# END fix for 'java_jre_validation_crl'

###############################################################################
# BEGIN fix (7 / 11) for 'java_jre_updated'
###############################################################################
(>&2 echo "Remediating rule 7/11: 'java_jre_updated'")
(>&2 echo "FIX FOR THIS RULE 'java_jre_updated' IS MISSING!")
# END fix for 'java_jre_updated'

###############################################################################
# BEGIN fix (8 / 11) for 'java_jre_validation_ocsp'
###############################################################################
(>&2 echo "Remediating rule 8/11: 'java_jre_validation_ocsp'")
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.ocsp=true$" ${JAVA_PROPERTIES} && \
sed -i "s/deployment.security.validation.ocsp=.*/deployment.security.validation.ocsp=true/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.ocsp=true" >> ${JAVA_PROPERTIES}
fi
# END fix for 'java_jre_validation_ocsp'

###############################################################################
# BEGIN fix (9 / 11) for 'java_jre_deployment_config_properties'
###############################################################################
(>&2 echo "Remediating rule 9/11: 'java_jre_deployment_config_properties'")
JAVA_CONFIG="/etc/.java/deployment/deployment.config"
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.system.config=file://${JAVA_CONFIG}$" ${JAVA_CONFIG} && \
sed -i "s;deployment.system.config=.*;deployment.system.config=file:\/\/${JAVA_PROPERTIES};g" ${JAVA_CONFIG}
if ! [ $? -eq 0 ] ; then
  echo "deployment.system.config=file://${JAVA_PROPERTIES}" >> ${JAVA_CONFIG}
fi
# END fix for 'java_jre_deployment_config_properties'

###############################################################################
# BEGIN fix (10 / 11) for 'java_jre_deployment_config_exists'
###############################################################################
(>&2 echo "Remediating rule 10/11: 'java_jre_deployment_config_exists'")
JAVA_CONFIG="/etc/.java/deployment/deployment.config"
JAVA_DIR="/etc/.java/deployment"

if [ ! -d ${JAVA_DIR} ] ; then
  mkdir -p -m 755 ${JAVA_DIR}
fi

if [ ! -e ${JAVA_CONFIG} ]; then
  touch ${JAVA_CONFIG} && chmod 644 ${JAVA_CONFIG}
fi

chmod 644 ${JAVA_CONFIG}
# END fix for 'java_jre_deployment_config_exists'

###############################################################################
# BEGIN fix (11 / 11) for 'java_jre_deployment_config_mandatory'
###############################################################################
(>&2 echo "Remediating rule 11/11: 'java_jre_deployment_config_mandatory'")
JAVA_CONFIG="/etc/.java/deployment/deployment.config"

grep -q "^deployment.system.config.mandatory=false$" ${JAVA_CONFIG} && \
sed -i "s/deployment.system.config.mandatory=.*/deployment.system.config.mandatory=false/g" ${JAVA_CONFIG}
if ! [ $? -eq 0 ] ; then
  echo "deployment.system.config.mandatory=false" >> ${JAVA_CONFIG}
fi
# END fix for 'java_jre_deployment_config_mandatory'

