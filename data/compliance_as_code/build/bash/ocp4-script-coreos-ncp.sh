###############################################################################
#
# Bash remediation role for profile coreos-ncp
# Profile Title:  NIST National Checklist for Red Hat Enterprise Linux CoreOS
# Profile Description:
# This compliance profile reflects the core set of security
# related configuration settings for deployment of Red Hat Enterprise
# Linux CoreOS into U.S. Defense, Intelligence, and Civilian agencies.
# Development partners and sponsors include the U.S. National Institute
# of Standards and Technology (NIST), U.S. Department of Defense,
# the National Security Agency, and Red Hat.
# 
# This baseline implements configuration requirements from the following
# sources:
# 
# - Committee on National Security Systems Instruction No. 1253 (CNSSI 1253)
# - NIST Controlled Unclassified Information (NIST 800-171)
# - NIST 800-53 control selections for Moderate-Impact systems (NIST 800-53)
# - U.S. Government Configuration Baseline (USGCB)
# - NIAP Protection Profile for General Purpose Operating Systems v4.2.1 (OSPP v4.2.1)
# - DISA Operating System Security Requirements Guide (OS SRG)
# 
# For any differing configuration requirements, e.g. password lengths, the stricter
# security setting was chosen. Security Requirement Traceability Guides (RTMs) and
# sample System Security Configuration Guides are provided via the
# scap-security-guide-docs package.
# 
# This profile reflects U.S. Government consensus content and is developed through
# the ComplianceAsCode initiative, championed by the National
# Security Agency. Except for differences in formatting to accommodate
# publishing processes, this profile mirrors ComplianceAsCode
# content as minor divergences, such as bugfixes, work through the
# consensus and release processes.
#
# Benchmark ID:  OCP-4
# Benchmark Version:  0.1.50
#
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.2.17 using:
# 	$ oscap xccdf generate fix --profile coreos-ncp --template urn:xccdf:fix:script:sh xccdf-file.xml 
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ sudo ./remediation-role.sh
#
###############################################################################

###############################################################################
# BEGIN fix (1 / 230) for 'network_nmcli_permissions'
###############################################################################
(>&2 echo "Remediating rule 1/230: 'network_nmcli_permissions'")
(>&2 echo "FIX FOR THIS RULE 'network_nmcli_permissions' IS MISSING!")
# END fix for 'network_nmcli_permissions'

###############################################################################
# BEGIN fix (2 / 230) for 'package_iptables_installed'
###############################################################################
(>&2 echo "Remediating rule 2/230: 'package_iptables_installed'")
(>&2 echo "FIX FOR THIS RULE 'package_iptables_installed' IS MISSING!")
# END fix for 'package_iptables_installed'

###############################################################################
# BEGIN fix (3 / 230) for 'sysctl_net_ipv6_conf_default_accept_source_route'
###############################################################################
(>&2 echo "Remediating rule 3/230: 'sysctl_net_ipv6_conf_default_accept_source_route'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv6_conf_default_accept_source_route' IS MISSING!")
# END fix for 'sysctl_net_ipv6_conf_default_accept_source_route'

###############################################################################
# BEGIN fix (4 / 230) for 'sysctl_net_ipv6_conf_all_accept_source_route'
###############################################################################
(>&2 echo "Remediating rule 4/230: 'sysctl_net_ipv6_conf_all_accept_source_route'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv6_conf_all_accept_source_route' IS MISSING!")
# END fix for 'sysctl_net_ipv6_conf_all_accept_source_route'

###############################################################################
# BEGIN fix (5 / 230) for 'sysctl_net_ipv6_conf_all_accept_redirects'
###############################################################################
(>&2 echo "Remediating rule 5/230: 'sysctl_net_ipv6_conf_all_accept_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv6_conf_all_accept_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv6_conf_all_accept_redirects'

###############################################################################
# BEGIN fix (6 / 230) for 'sysctl_net_ipv6_conf_default_accept_ra'
###############################################################################
(>&2 echo "Remediating rule 6/230: 'sysctl_net_ipv6_conf_default_accept_ra'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv6_conf_default_accept_ra' IS MISSING!")
# END fix for 'sysctl_net_ipv6_conf_default_accept_ra'

###############################################################################
# BEGIN fix (7 / 230) for 'sysctl_net_ipv6_conf_all_accept_ra'
###############################################################################
(>&2 echo "Remediating rule 7/230: 'sysctl_net_ipv6_conf_all_accept_ra'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv6_conf_all_accept_ra' IS MISSING!")
# END fix for 'sysctl_net_ipv6_conf_all_accept_ra'

###############################################################################
# BEGIN fix (8 / 230) for 'sysctl_net_ipv6_conf_default_accept_redirects'
###############################################################################
(>&2 echo "Remediating rule 8/230: 'sysctl_net_ipv6_conf_default_accept_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv6_conf_default_accept_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv6_conf_default_accept_redirects'

###############################################################################
# BEGIN fix (9 / 230) for 'sysctl_net_ipv4_conf_default_accept_source_route'
###############################################################################
(>&2 echo "Remediating rule 9/230: 'sysctl_net_ipv4_conf_default_accept_source_route'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_default_accept_source_route' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_default_accept_source_route'

###############################################################################
# BEGIN fix (10 / 230) for 'sysctl_net_ipv4_icmp_ignore_bogus_error_responses'
###############################################################################
(>&2 echo "Remediating rule 10/230: 'sysctl_net_ipv4_icmp_ignore_bogus_error_responses'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_icmp_ignore_bogus_error_responses' IS MISSING!")
# END fix for 'sysctl_net_ipv4_icmp_ignore_bogus_error_responses'

###############################################################################
# BEGIN fix (11 / 230) for 'sysctl_net_ipv4_icmp_echo_ignore_broadcasts'
###############################################################################
(>&2 echo "Remediating rule 11/230: 'sysctl_net_ipv4_icmp_echo_ignore_broadcasts'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_icmp_echo_ignore_broadcasts' IS MISSING!")
# END fix for 'sysctl_net_ipv4_icmp_echo_ignore_broadcasts'

###############################################################################
# BEGIN fix (12 / 230) for 'sysctl_net_ipv4_conf_default_accept_redirects'
###############################################################################
(>&2 echo "Remediating rule 12/230: 'sysctl_net_ipv4_conf_default_accept_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_default_accept_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_default_accept_redirects'

###############################################################################
# BEGIN fix (13 / 230) for 'sysctl_net_ipv4_conf_default_rp_filter'
###############################################################################
(>&2 echo "Remediating rule 13/230: 'sysctl_net_ipv4_conf_default_rp_filter'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_default_rp_filter' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_default_rp_filter'

###############################################################################
# BEGIN fix (14 / 230) for 'sysctl_net_ipv4_conf_all_secure_redirects'
###############################################################################
(>&2 echo "Remediating rule 14/230: 'sysctl_net_ipv4_conf_all_secure_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_all_secure_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_all_secure_redirects'

###############################################################################
# BEGIN fix (15 / 230) for 'sysctl_net_ipv4_conf_all_accept_source_route'
###############################################################################
(>&2 echo "Remediating rule 15/230: 'sysctl_net_ipv4_conf_all_accept_source_route'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_all_accept_source_route' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_all_accept_source_route'

###############################################################################
# BEGIN fix (16 / 230) for 'sysctl_net_ipv4_conf_all_accept_redirects'
###############################################################################
(>&2 echo "Remediating rule 16/230: 'sysctl_net_ipv4_conf_all_accept_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_all_accept_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_all_accept_redirects'

###############################################################################
# BEGIN fix (17 / 230) for 'sysctl_net_ipv4_conf_all_log_martians'
###############################################################################
(>&2 echo "Remediating rule 17/230: 'sysctl_net_ipv4_conf_all_log_martians'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_all_log_martians' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_all_log_martians'

###############################################################################
# BEGIN fix (18 / 230) for 'sysctl_net_ipv4_conf_all_rp_filter'
###############################################################################
(>&2 echo "Remediating rule 18/230: 'sysctl_net_ipv4_conf_all_rp_filter'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_all_rp_filter' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_all_rp_filter'

###############################################################################
# BEGIN fix (19 / 230) for 'sysctl_net_ipv4_conf_default_secure_redirects'
###############################################################################
(>&2 echo "Remediating rule 19/230: 'sysctl_net_ipv4_conf_default_secure_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_default_secure_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_default_secure_redirects'

###############################################################################
# BEGIN fix (20 / 230) for 'sysctl_net_ipv4_tcp_syncookies'
###############################################################################
(>&2 echo "Remediating rule 20/230: 'sysctl_net_ipv4_tcp_syncookies'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_tcp_syncookies' IS MISSING!")
# END fix for 'sysctl_net_ipv4_tcp_syncookies'

###############################################################################
# BEGIN fix (21 / 230) for 'sysctl_net_ipv4_conf_default_log_martians'
###############################################################################
(>&2 echo "Remediating rule 21/230: 'sysctl_net_ipv4_conf_default_log_martians'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_default_log_martians' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_default_log_martians'

###############################################################################
# BEGIN fix (22 / 230) for 'sysctl_net_ipv4_conf_all_send_redirects'
###############################################################################
(>&2 echo "Remediating rule 22/230: 'sysctl_net_ipv4_conf_all_send_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_all_send_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_all_send_redirects'

###############################################################################
# BEGIN fix (23 / 230) for 'sysctl_net_ipv4_conf_default_send_redirects'
###############################################################################
(>&2 echo "Remediating rule 23/230: 'sysctl_net_ipv4_conf_default_send_redirects'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_ipv4_conf_default_send_redirects' IS MISSING!")
# END fix for 'sysctl_net_ipv4_conf_default_send_redirects'

###############################################################################
# BEGIN fix (24 / 230) for 'kernel_module_atm_disabled'
###############################################################################
(>&2 echo "Remediating rule 24/230: 'kernel_module_atm_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_atm_disabled' IS MISSING!")
# END fix for 'kernel_module_atm_disabled'

###############################################################################
# BEGIN fix (25 / 230) for 'kernel_module_firewire-core_disabled'
###############################################################################
(>&2 echo "Remediating rule 25/230: 'kernel_module_firewire-core_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_firewire-core_disabled' IS MISSING!")
# END fix for 'kernel_module_firewire-core_disabled'

###############################################################################
# BEGIN fix (26 / 230) for 'kernel_module_tipc_disabled'
###############################################################################
(>&2 echo "Remediating rule 26/230: 'kernel_module_tipc_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_tipc_disabled' IS MISSING!")
# END fix for 'kernel_module_tipc_disabled'

###############################################################################
# BEGIN fix (27 / 230) for 'kernel_module_sctp_disabled'
###############################################################################
(>&2 echo "Remediating rule 27/230: 'kernel_module_sctp_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_sctp_disabled' IS MISSING!")
# END fix for 'kernel_module_sctp_disabled'

###############################################################################
# BEGIN fix (28 / 230) for 'kernel_module_can_disabled'
###############################################################################
(>&2 echo "Remediating rule 28/230: 'kernel_module_can_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_can_disabled' IS MISSING!")
# END fix for 'kernel_module_can_disabled'

###############################################################################
# BEGIN fix (29 / 230) for 'kernel_module_bluetooth_disabled'
###############################################################################
(>&2 echo "Remediating rule 29/230: 'kernel_module_bluetooth_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_bluetooth_disabled' IS MISSING!")
# END fix for 'kernel_module_bluetooth_disabled'

###############################################################################
# BEGIN fix (30 / 230) for 'wireless_disable_in_bios'
###############################################################################
(>&2 echo "Remediating rule 30/230: 'wireless_disable_in_bios'")
(>&2 echo "FIX FOR THIS RULE 'wireless_disable_in_bios' IS MISSING!")
# END fix for 'wireless_disable_in_bios'

###############################################################################
# BEGIN fix (31 / 230) for 'wireless_disable_interfaces'
###############################################################################
(>&2 echo "Remediating rule 31/230: 'wireless_disable_interfaces'")
(>&2 echo "FIX FOR THIS RULE 'wireless_disable_interfaces' IS MISSING!")
# END fix for 'wireless_disable_interfaces'

###############################################################################
# BEGIN fix (32 / 230) for 'grub2_pti_argument'
###############################################################################
(>&2 echo "Remediating rule 32/230: 'grub2_pti_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_pti_argument' IS MISSING!")
# END fix for 'grub2_pti_argument'

###############################################################################
# BEGIN fix (33 / 230) for 'grub2_uefi_password'
###############################################################################
(>&2 echo "Remediating rule 33/230: 'grub2_uefi_password'")
(>&2 echo "FIX FOR THIS RULE 'grub2_uefi_password' IS MISSING!")
# END fix for 'grub2_uefi_password'

###############################################################################
# BEGIN fix (34 / 230) for 'selinux_confinement_of_daemons'
###############################################################################
(>&2 echo "Remediating rule 34/230: 'selinux_confinement_of_daemons'")
(>&2 echo "FIX FOR THIS RULE 'selinux_confinement_of_daemons' IS MISSING!")
# END fix for 'selinux_confinement_of_daemons'

###############################################################################
# BEGIN fix (35 / 230) for 'grub2_enable_selinux'
###############################################################################
(>&2 echo "Remediating rule 35/230: 'grub2_enable_selinux'")
(>&2 echo "FIX FOR THIS RULE 'grub2_enable_selinux' IS MISSING!")
# END fix for 'grub2_enable_selinux'

###############################################################################
# BEGIN fix (36 / 230) for 'selinux_state'
###############################################################################
(>&2 echo "Remediating rule 36/230: 'selinux_state'")
(>&2 echo "FIX FOR THIS RULE 'selinux_state' IS MISSING!")
# END fix for 'selinux_state'

###############################################################################
# BEGIN fix (37 / 230) for 'selinux_policytype'
###############################################################################
(>&2 echo "Remediating rule 37/230: 'selinux_policytype'")
(>&2 echo "FIX FOR THIS RULE 'selinux_policytype' IS MISSING!")
# END fix for 'selinux_policytype'

###############################################################################
# BEGIN fix (38 / 230) for 'no_empty_passwords'
###############################################################################
(>&2 echo "Remediating rule 38/230: 'no_empty_passwords'")
(>&2 echo "FIX FOR THIS RULE 'no_empty_passwords' IS MISSING!")
# END fix for 'no_empty_passwords'

###############################################################################
# BEGIN fix (39 / 230) for 'no_netrc_files'
###############################################################################
(>&2 echo "Remediating rule 39/230: 'no_netrc_files'")
(>&2 echo "FIX FOR THIS RULE 'no_netrc_files' IS MISSING!")
# END fix for 'no_netrc_files'

###############################################################################
# BEGIN fix (40 / 230) for 'accounts_no_uid_except_zero'
###############################################################################
(>&2 echo "Remediating rule 40/230: 'accounts_no_uid_except_zero'")
(>&2 echo "FIX FOR THIS RULE 'accounts_no_uid_except_zero' IS MISSING!")
# END fix for 'accounts_no_uid_except_zero'

###############################################################################
# BEGIN fix (41 / 230) for 'no_direct_root_logins'
###############################################################################
(>&2 echo "Remediating rule 41/230: 'no_direct_root_logins'")
echo > /etc/securetty
# END fix for 'no_direct_root_logins'

###############################################################################
# BEGIN fix (42 / 230) for 'no_shelllogin_for_systemaccounts'
###############################################################################
(>&2 echo "Remediating rule 42/230: 'no_shelllogin_for_systemaccounts'")
(>&2 echo "FIX FOR THIS RULE 'no_shelllogin_for_systemaccounts' IS MISSING!")
# END fix for 'no_shelllogin_for_systemaccounts'

###############################################################################
# BEGIN fix (43 / 230) for 'service_debug-shell_disabled'
###############################################################################
(>&2 echo "Remediating rule 43/230: 'service_debug-shell_disabled'")
(>&2 echo "FIX FOR THIS RULE 'service_debug-shell_disabled' IS MISSING!")
# END fix for 'service_debug-shell_disabled'

###############################################################################
# BEGIN fix (44 / 230) for 'disable_ctrlaltdel_reboot'
###############################################################################
(>&2 echo "Remediating rule 44/230: 'disable_ctrlaltdel_reboot'")
(>&2 echo "FIX FOR THIS RULE 'disable_ctrlaltdel_reboot' IS MISSING!")
# END fix for 'disable_ctrlaltdel_reboot'

###############################################################################
# BEGIN fix (45 / 230) for 'grub2_disable_interactive_boot'
###############################################################################
(>&2 echo "Remediating rule 45/230: 'grub2_disable_interactive_boot'")
(>&2 echo "FIX FOR THIS RULE 'grub2_disable_interactive_boot' IS MISSING!")
# END fix for 'grub2_disable_interactive_boot'

###############################################################################
# BEGIN fix (46 / 230) for 'disable_ctrlaltdel_burstaction'
###############################################################################
(>&2 echo "Remediating rule 46/230: 'disable_ctrlaltdel_burstaction'")
(>&2 echo "FIX FOR THIS RULE 'disable_ctrlaltdel_burstaction' IS MISSING!")
# END fix for 'disable_ctrlaltdel_burstaction'

###############################################################################
# BEGIN fix (47 / 230) for 'require_singleuser_auth'
###############################################################################
(>&2 echo "Remediating rule 47/230: 'require_singleuser_auth'")
(>&2 echo "FIX FOR THIS RULE 'require_singleuser_auth' IS MISSING!")
# END fix for 'require_singleuser_auth'

###############################################################################
# BEGIN fix (48 / 230) for 'banner_etc_issue'
###############################################################################
(>&2 echo "Remediating rule 48/230: 'banner_etc_issue'")
(>&2 echo "FIX FOR THIS RULE 'banner_etc_issue' IS MISSING!")
# END fix for 'banner_etc_issue'

###############################################################################
# BEGIN fix (49 / 230) for 'sysctl_fs_protected_hardlinks'
###############################################################################
(>&2 echo "Remediating rule 49/230: 'sysctl_fs_protected_hardlinks'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_fs_protected_hardlinks' IS MISSING!")
# END fix for 'sysctl_fs_protected_hardlinks'

###############################################################################
# BEGIN fix (50 / 230) for 'sysctl_fs_protected_symlinks'
###############################################################################
(>&2 echo "Remediating rule 50/230: 'sysctl_fs_protected_symlinks'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_fs_protected_symlinks' IS MISSING!")
# END fix for 'sysctl_fs_protected_symlinks'

###############################################################################
# BEGIN fix (51 / 230) for 'bios_disable_usb_boot'
###############################################################################
(>&2 echo "Remediating rule 51/230: 'bios_disable_usb_boot'")
(>&2 echo "FIX FOR THIS RULE 'bios_disable_usb_boot' IS MISSING!")
# END fix for 'bios_disable_usb_boot'

###############################################################################
# BEGIN fix (52 / 230) for 'kernel_module_cramfs_disabled'
###############################################################################
(>&2 echo "Remediating rule 52/230: 'kernel_module_cramfs_disabled'")
(>&2 echo "FIX FOR THIS RULE 'kernel_module_cramfs_disabled' IS MISSING!")
# END fix for 'kernel_module_cramfs_disabled'

###############################################################################
# BEGIN fix (53 / 230) for 'grub2_nousb_argument'
###############################################################################
(>&2 echo "Remediating rule 53/230: 'grub2_nousb_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_nousb_argument' IS MISSING!")
# END fix for 'grub2_nousb_argument'

###############################################################################
# BEGIN fix (54 / 230) for 'sysctl_user_max_user_namespaces'
###############################################################################
(>&2 echo "Remediating rule 54/230: 'sysctl_user_max_user_namespaces'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_user_max_user_namespaces' IS MISSING!")
# END fix for 'sysctl_user_max_user_namespaces'

###############################################################################
# BEGIN fix (55 / 230) for 'sysctl_kernel_yama_ptrace_scope'
###############################################################################
(>&2 echo "Remediating rule 55/230: 'sysctl_kernel_yama_ptrace_scope'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_yama_ptrace_scope' IS MISSING!")
# END fix for 'sysctl_kernel_yama_ptrace_scope'

###############################################################################
# BEGIN fix (56 / 230) for 'sysctl_kernel_kexec_load_disabled'
###############################################################################
(>&2 echo "Remediating rule 56/230: 'sysctl_kernel_kexec_load_disabled'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_kexec_load_disabled' IS MISSING!")
# END fix for 'sysctl_kernel_kexec_load_disabled'

###############################################################################
# BEGIN fix (57 / 230) for 'sysctl_kernel_unprivileged_bpf_disabled'
###############################################################################
(>&2 echo "Remediating rule 57/230: 'sysctl_kernel_unprivileged_bpf_disabled'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_unprivileged_bpf_disabled' IS MISSING!")
# END fix for 'sysctl_kernel_unprivileged_bpf_disabled'

###############################################################################
# BEGIN fix (58 / 230) for 'sysctl_net_core_bpf_jit_harden'
###############################################################################
(>&2 echo "Remediating rule 58/230: 'sysctl_net_core_bpf_jit_harden'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_net_core_bpf_jit_harden' IS MISSING!")
# END fix for 'sysctl_net_core_bpf_jit_harden'

###############################################################################
# BEGIN fix (59 / 230) for 'sysctl_kernel_perf_event_paranoid'
###############################################################################
(>&2 echo "Remediating rule 59/230: 'sysctl_kernel_perf_event_paranoid'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_perf_event_paranoid' IS MISSING!")
# END fix for 'sysctl_kernel_perf_event_paranoid'

###############################################################################
# BEGIN fix (60 / 230) for 'grub2_vsyscall_argument'
###############################################################################
(>&2 echo "Remediating rule 60/230: 'grub2_vsyscall_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_vsyscall_argument' IS MISSING!")
# END fix for 'grub2_vsyscall_argument'

###############################################################################
# BEGIN fix (61 / 230) for 'sysctl_kernel_core_pattern'
###############################################################################
(>&2 echo "Remediating rule 61/230: 'sysctl_kernel_core_pattern'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_core_pattern' IS MISSING!")
# END fix for 'sysctl_kernel_core_pattern'

###############################################################################
# BEGIN fix (62 / 230) for 'sysctl_kernel_dmesg_restrict'
###############################################################################
(>&2 echo "Remediating rule 62/230: 'sysctl_kernel_dmesg_restrict'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_dmesg_restrict' IS MISSING!")
# END fix for 'sysctl_kernel_dmesg_restrict'

###############################################################################
# BEGIN fix (63 / 230) for 'grub2_slub_debug_argument'
###############################################################################
(>&2 echo "Remediating rule 63/230: 'grub2_slub_debug_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_slub_debug_argument' IS MISSING!")
# END fix for 'grub2_slub_debug_argument'

###############################################################################
# BEGIN fix (64 / 230) for 'grub2_page_poison_argument'
###############################################################################
(>&2 echo "Remediating rule 64/230: 'grub2_page_poison_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_page_poison_argument' IS MISSING!")
# END fix for 'grub2_page_poison_argument'

###############################################################################
# BEGIN fix (65 / 230) for 'service_systemd-coredump_disabled'
###############################################################################
(>&2 echo "Remediating rule 65/230: 'service_systemd-coredump_disabled'")
(>&2 echo "FIX FOR THIS RULE 'service_systemd-coredump_disabled' IS MISSING!")
# END fix for 'service_systemd-coredump_disabled'

###############################################################################
# BEGIN fix (66 / 230) for 'coredump_disable_backtraces'
###############################################################################
(>&2 echo "Remediating rule 66/230: 'coredump_disable_backtraces'")
if [ -e "/etc/systemd/coredump.conf" ] ; then
    LC_ALL=C sed -i "/^\s*ProcessSizeMax\s*=\s*/Id" "/etc/systemd/coredump.conf"
else
    touch "/etc/systemd/coredump.conf"
fi
cp "/etc/systemd/coredump.conf" "/etc/systemd/coredump.conf.bak"
# Insert at the end of the file
printf '%s\n' "ProcessSizeMax=0" >> "/etc/systemd/coredump.conf"
# Clean up after ourselves.
rm "/etc/systemd/coredump.conf.bak"
# END fix for 'coredump_disable_backtraces'

###############################################################################
# BEGIN fix (67 / 230) for 'coredump_disable_storage'
###############################################################################
(>&2 echo "Remediating rule 67/230: 'coredump_disable_storage'")
if [ -e "/etc/systemd/coredump.conf" ] ; then
    LC_ALL=C sed -i "/^\s*Storage\s*=\s*/Id" "/etc/systemd/coredump.conf"
else
    touch "/etc/systemd/coredump.conf"
fi
cp "/etc/systemd/coredump.conf" "/etc/systemd/coredump.conf.bak"
# Insert at the end of the file
printf '%s\n' "Storage=none" >> "/etc/systemd/coredump.conf"
# Clean up after ourselves.
rm "/etc/systemd/coredump.conf.bak"
# END fix for 'coredump_disable_storage'

###############################################################################
# BEGIN fix (68 / 230) for 'disable_users_coredumps'
###############################################################################
(>&2 echo "Remediating rule 68/230: 'disable_users_coredumps'")
(>&2 echo "FIX FOR THIS RULE 'disable_users_coredumps' IS MISSING!")
# END fix for 'disable_users_coredumps'

###############################################################################
# BEGIN fix (69 / 230) for 'sysctl_kernel_kptr_restrict'
###############################################################################
(>&2 echo "Remediating rule 69/230: 'sysctl_kernel_kptr_restrict'")
(>&2 echo "FIX FOR THIS RULE 'sysctl_kernel_kptr_restrict' IS MISSING!")
# END fix for 'sysctl_kernel_kptr_restrict'

###############################################################################
# BEGIN fix (70 / 230) for 'package_audit_installed'
###############################################################################
(>&2 echo "Remediating rule 70/230: 'package_audit_installed'")
(>&2 echo "FIX FOR THIS RULE 'package_audit_installed' IS MISSING!")
# END fix for 'package_audit_installed'

###############################################################################
# BEGIN fix (71 / 230) for 'service_auditd_enabled'
###############################################################################
(>&2 echo "Remediating rule 71/230: 'service_auditd_enabled'")
(>&2 echo "FIX FOR THIS RULE 'service_auditd_enabled' IS MISSING!")
# END fix for 'service_auditd_enabled'

###############################################################################
# BEGIN fix (72 / 230) for 'grub2_audit_backlog_limit_argument'
###############################################################################
(>&2 echo "Remediating rule 72/230: 'grub2_audit_backlog_limit_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_audit_backlog_limit_argument' IS MISSING!")
# END fix for 'grub2_audit_backlog_limit_argument'

###############################################################################
# BEGIN fix (73 / 230) for 'grub2_audit_argument'
###############################################################################
(>&2 echo "Remediating rule 73/230: 'grub2_audit_argument'")
(>&2 echo "FIX FOR THIS RULE 'grub2_audit_argument' IS MISSING!")
# END fix for 'grub2_audit_argument'

###############################################################################
# BEGIN fix (74 / 230) for 'auditd_data_retention_flush'
###############################################################################
(>&2 echo "Remediating rule 74/230: 'auditd_data_retention_flush'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_flush' IS MISSING!")
# END fix for 'auditd_data_retention_flush'

###############################################################################
# BEGIN fix (75 / 230) for 'auditd_write_logs'
###############################################################################
(>&2 echo "Remediating rule 75/230: 'auditd_write_logs'")
if [ -e "/etc/audit/auditd.conf" ] ; then
    LC_ALL=C sed -i "/^\s*write_logs\s*=\s*/Id" "/etc/audit/auditd.conf"
else
    touch "/etc/audit/auditd.conf"
fi
cp "/etc/audit/auditd.conf" "/etc/audit/auditd.conf.bak"
# Insert at the end of the file
printf '%s\n' "write_logs = yes" >> "/etc/audit/auditd.conf"
# Clean up after ourselves.
rm "/etc/audit/auditd.conf.bak"
# END fix for 'auditd_write_logs'

###############################################################################
# BEGIN fix (76 / 230) for 'auditd_name_format'
###############################################################################
(>&2 echo "Remediating rule 76/230: 'auditd_name_format'")
if [ -e "/etc/audit/auditd.conf" ] ; then
    LC_ALL=C sed -i "/^\s*name_format\s*=\s*/Id" "/etc/audit/auditd.conf"
else
    touch "/etc/audit/auditd.conf"
fi
cp "/etc/audit/auditd.conf" "/etc/audit/auditd.conf.bak"
# Insert at the end of the file
printf '%s\n' "name_format = hostname" >> "/etc/audit/auditd.conf"
# Clean up after ourselves.
rm "/etc/audit/auditd.conf.bak"
# END fix for 'auditd_name_format'

###############################################################################
# BEGIN fix (77 / 230) for 'auditd_data_disk_error_action'
###############################################################################
(>&2 echo "Remediating rule 77/230: 'auditd_data_disk_error_action'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_disk_error_action' IS MISSING!")
# END fix for 'auditd_data_disk_error_action'

###############################################################################
# BEGIN fix (78 / 230) for 'auditd_data_retention_max_log_file'
###############################################################################
(>&2 echo "Remediating rule 78/230: 'auditd_data_retention_max_log_file'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_max_log_file' IS MISSING!")
# END fix for 'auditd_data_retention_max_log_file'

###############################################################################
# BEGIN fix (79 / 230) for 'auditd_data_retention_space_left'
###############################################################################
(>&2 echo "Remediating rule 79/230: 'auditd_data_retention_space_left'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_space_left' IS MISSING!")
# END fix for 'auditd_data_retention_space_left'

###############################################################################
# BEGIN fix (80 / 230) for 'auditd_data_retention_action_mail_acct'
###############################################################################
(>&2 echo "Remediating rule 80/230: 'auditd_data_retention_action_mail_acct'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_action_mail_acct' IS MISSING!")
# END fix for 'auditd_data_retention_action_mail_acct'

###############################################################################
# BEGIN fix (81 / 230) for 'auditd_data_retention_admin_space_left_action'
###############################################################################
(>&2 echo "Remediating rule 81/230: 'auditd_data_retention_admin_space_left_action'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_admin_space_left_action' IS MISSING!")
# END fix for 'auditd_data_retention_admin_space_left_action'

###############################################################################
# BEGIN fix (82 / 230) for 'auditd_data_retention_space_left_action'
###############################################################################
(>&2 echo "Remediating rule 82/230: 'auditd_data_retention_space_left_action'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_space_left_action' IS MISSING!")
# END fix for 'auditd_data_retention_space_left_action'

###############################################################################
# BEGIN fix (83 / 230) for 'auditd_local_events'
###############################################################################
(>&2 echo "Remediating rule 83/230: 'auditd_local_events'")
if [ -e "/etc/audit/auditd.conf" ] ; then
    LC_ALL=C sed -i "/^\s*local_events\s*=\s*/Id" "/etc/audit/auditd.conf"
else
    touch "/etc/audit/auditd.conf"
fi
cp "/etc/audit/auditd.conf" "/etc/audit/auditd.conf.bak"
# Insert at the end of the file
printf '%s\n' "local_events = yes" >> "/etc/audit/auditd.conf"
# Clean up after ourselves.
rm "/etc/audit/auditd.conf.bak"
# END fix for 'auditd_local_events'

###############################################################################
# BEGIN fix (84 / 230) for 'auditd_data_disk_full_action'
###############################################################################
(>&2 echo "Remediating rule 84/230: 'auditd_data_disk_full_action'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_disk_full_action' IS MISSING!")
# END fix for 'auditd_data_disk_full_action'

###############################################################################
# BEGIN fix (85 / 230) for 'auditd_freq'
###############################################################################
(>&2 echo "Remediating rule 85/230: 'auditd_freq'")
if [ -e "/etc/audit/auditd.conf" ] ; then
    LC_ALL=C sed -i "/^\s*freq\s*=\s*/Id" "/etc/audit/auditd.conf"
else
    touch "/etc/audit/auditd.conf"
fi
cp "/etc/audit/auditd.conf" "/etc/audit/auditd.conf.bak"
# Insert at the end of the file
printf '%s\n' "freq = 50" >> "/etc/audit/auditd.conf"
# Clean up after ourselves.
rm "/etc/audit/auditd.conf.bak"
# END fix for 'auditd_freq'

###############################################################################
# BEGIN fix (86 / 230) for 'auditd_data_retention_num_logs'
###############################################################################
(>&2 echo "Remediating rule 86/230: 'auditd_data_retention_num_logs'")

var_auditd_num_logs="5"

AUDITCONFIG=/etc/audit/auditd.conf
# Function to replace configuration setting in config file or add the configuration setting if
# it does not exist.
#
# Expects arguments:
#
# config_file:		Configuration file that will be modified
# key:			Configuration option to change
# value:		Value of the configuration option to change
# cce:			The CCE identifier or '@CCENUM@' if no CCE identifier exists
# format:		The printf-like format string that will be given stripped key and value as arguments,
#			so e.g. '%s=%s' will result in key=value subsitution (i.e. without spaces around =)
#
# Optional arugments:
#
# format:		Optional argument to specify the format of how key/value should be
# 			modified/appended in the configuration file. The default is key = value.
#
# Example Call(s):
#
#     With default format of 'key = value':
#     replace_or_append '/etc/sysctl.conf' '^kernel.randomize_va_space' '2' '@CCENUM@'
#
#     With custom key/value format:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' 'disabled' '@CCENUM@' '%s=%s'
#
#     With a variable:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' $var_selinux_state '@CCENUM@' '%s=%s'
#
function replace_or_append {
  local default_format='%s = %s' case_insensitive_mode=yes sed_case_insensitive_option='' grep_case_insensitive_option=''
  local config_file=$1
  local key=$2
  local value=$3
  local cce=$4
  local format=$5

  if [ "$case_insensitive_mode" = yes ]; then
    sed_case_insensitive_option="i"
    grep_case_insensitive_option="-i"
  fi
  [ -n "$format" ] || format="$default_format"
  # Check sanity of the input
  [ $# -ge "3" ] || { echo "Usage: replace_or_append <config_file_location> <key_to_search> <new_value> [<CCE number or literal '@CCENUM@' if unknown>] [printf-like format, default is '$default_format']" >&2; exit 1; }

  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.
  # Otherwise, regular sed command will do.
  sed_command=('sed' '-i')
  if test -L "$config_file"; then
    sed_command+=('--follow-symlinks')
  fi

  # Test that the cce arg is not empty or does not equal @CCENUM@.
  # If @CCENUM@ exists, it means that there is no CCE assigned.
  if [ -n "$cce" ] && [ "$cce" != '@CCENUM@' ]; then
    cce="${cce}"
  else
    cce="CCE"
  fi

  # Strip any search characters in the key arg so that the key can be replaced without
  # adding any search characters to the config file.
  stripped_key=$(sed 's/[\^=\$,;+]*//g' <<< "$key")

  # shellcheck disable=SC2059
  printf -v formatted_output "$format" "$stripped_key" "$value"

  # If the key exists, change it. Otherwise, add it to the config_file.
  # We search for the key string followed by a word boundary (matched by \>),
  # so if we search for 'setting', 'setting2' won't match.
  if LC_ALL=C grep -q -m 1 $grep_case_insensitive_option -e "${key}\\>" "$config_file"; then
    "${sed_command[@]}" "s/${key}\\>.*/$formatted_output/g$sed_case_insensitive_option" "$config_file"
  else
    # \n is precaution for case where file ends without trailing newline
    printf '\n# Per %s: Set %s in %s\n' "$cce" "$formatted_output" "$config_file" >> "$config_file"
    printf '%s\n' "$formatted_output" >> "$config_file"
  fi
}
replace_or_append $AUDITCONFIG '^num_logs' "$var_auditd_num_logs" "CCE-82693-3"
# END fix for 'auditd_data_retention_num_logs'

###############################################################################
# BEGIN fix (87 / 230) for 'auditd_data_retention_max_log_file_action'
###############################################################################
(>&2 echo "Remediating rule 87/230: 'auditd_data_retention_max_log_file_action'")
(>&2 echo "FIX FOR THIS RULE 'auditd_data_retention_max_log_file_action' IS MISSING!")
# END fix for 'auditd_data_retention_max_log_file_action'

###############################################################################
# BEGIN fix (88 / 230) for 'auditd_log_format'
###############################################################################
(>&2 echo "Remediating rule 88/230: 'auditd_log_format'")
if [ -e "/etc/audit/auditd.conf" ] ; then
    LC_ALL=C sed -i "/^\s*log_format\s*=\s*/Id" "/etc/audit/auditd.conf"
else
    touch "/etc/audit/auditd.conf"
fi
cp "/etc/audit/auditd.conf" "/etc/audit/auditd.conf.bak"
# Insert at the end of the file
printf '%s\n' "log_format = ENRICHED" >> "/etc/audit/auditd.conf"
# Clean up after ourselves.
rm "/etc/audit/auditd.conf.bak"
# END fix for 'auditd_log_format'

###############################################################################
# BEGIN fix (89 / 230) for 'audit_rules_etc_gshadow_openat'
###############################################################################
(>&2 echo "Remediating rule 89/230: 'audit_rules_etc_gshadow_openat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_gshadow_openat' IS MISSING!")
# END fix for 'audit_rules_etc_gshadow_openat'

###############################################################################
# BEGIN fix (90 / 230) for 'audit_rules_sysadmin_actions'
###############################################################################
(>&2 echo "Remediating rule 90/230: 'audit_rules_sysadmin_actions'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_sysadmin_actions' IS MISSING!")
# END fix for 'audit_rules_sysadmin_actions'

###############################################################################
# BEGIN fix (91 / 230) for 'audit_rules_networkconfig_modification'
###############################################################################
(>&2 echo "Remediating rule 91/230: 'audit_rules_networkconfig_modification'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_networkconfig_modification' IS MISSING!")
# END fix for 'audit_rules_networkconfig_modification'

###############################################################################
# BEGIN fix (92 / 230) for 'audit_rules_etc_passwd_open_by_handle_at'
###############################################################################
(>&2 echo "Remediating rule 92/230: 'audit_rules_etc_passwd_open_by_handle_at'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_passwd_open_by_handle_at' IS MISSING!")
# END fix for 'audit_rules_etc_passwd_open_by_handle_at'

###############################################################################
# BEGIN fix (93 / 230) for 'audit_rules_etc_group_open_by_handle_at'
###############################################################################
(>&2 echo "Remediating rule 93/230: 'audit_rules_etc_group_open_by_handle_at'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_group_open_by_handle_at' IS MISSING!")
# END fix for 'audit_rules_etc_group_open_by_handle_at'

###############################################################################
# BEGIN fix (94 / 230) for 'audit_rules_etc_gshadow_open_by_handle_at'
###############################################################################
(>&2 echo "Remediating rule 94/230: 'audit_rules_etc_gshadow_open_by_handle_at'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_gshadow_open_by_handle_at' IS MISSING!")
# END fix for 'audit_rules_etc_gshadow_open_by_handle_at'

###############################################################################
# BEGIN fix (95 / 230) for 'audit_rules_etc_passwd_open'
###############################################################################
(>&2 echo "Remediating rule 95/230: 'audit_rules_etc_passwd_open'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_passwd_open' IS MISSING!")
# END fix for 'audit_rules_etc_passwd_open'

###############################################################################
# BEGIN fix (96 / 230) for 'directory_permissions_var_log_audit'
###############################################################################
(>&2 echo "Remediating rule 96/230: 'directory_permissions_var_log_audit'")
(>&2 echo "FIX FOR THIS RULE 'directory_permissions_var_log_audit' IS MISSING!")
# END fix for 'directory_permissions_var_log_audit'

###############################################################################
# BEGIN fix (97 / 230) for 'audit_rules_etc_shadow_open_by_handle_at'
###############################################################################
(>&2 echo "Remediating rule 97/230: 'audit_rules_etc_shadow_open_by_handle_at'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_shadow_open_by_handle_at' IS MISSING!")
# END fix for 'audit_rules_etc_shadow_open_by_handle_at'

###############################################################################
# BEGIN fix (98 / 230) for 'audit_rules_etc_group_openat'
###############################################################################
(>&2 echo "Remediating rule 98/230: 'audit_rules_etc_group_openat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_group_openat' IS MISSING!")
# END fix for 'audit_rules_etc_group_openat'

###############################################################################
# BEGIN fix (99 / 230) for 'audit_rules_immutable'
###############################################################################
(>&2 echo "Remediating rule 99/230: 'audit_rules_immutable'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_immutable' IS MISSING!")
# END fix for 'audit_rules_immutable'

###############################################################################
# BEGIN fix (100 / 230) for 'audit_rules_etc_group_open'
###############################################################################
(>&2 echo "Remediating rule 100/230: 'audit_rules_etc_group_open'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_group_open' IS MISSING!")
# END fix for 'audit_rules_etc_group_open'

###############################################################################
# BEGIN fix (101 / 230) for 'audit_rules_usergroup_modification_shadow'
###############################################################################
(>&2 echo "Remediating rule 101/230: 'audit_rules_usergroup_modification_shadow'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_usergroup_modification_shadow' IS MISSING!")
# END fix for 'audit_rules_usergroup_modification_shadow'

###############################################################################
# BEGIN fix (102 / 230) for 'audit_rules_etc_passwd_openat'
###############################################################################
(>&2 echo "Remediating rule 102/230: 'audit_rules_etc_passwd_openat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_passwd_openat' IS MISSING!")
# END fix for 'audit_rules_etc_passwd_openat'

###############################################################################
# BEGIN fix (103 / 230) for 'audit_rules_etc_shadow_open'
###############################################################################
(>&2 echo "Remediating rule 103/230: 'audit_rules_etc_shadow_open'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_shadow_open' IS MISSING!")
# END fix for 'audit_rules_etc_shadow_open'

###############################################################################
# BEGIN fix (104 / 230) for 'directory_access_var_log_audit'
###############################################################################
(>&2 echo "Remediating rule 104/230: 'directory_access_var_log_audit'")
(>&2 echo "FIX FOR THIS RULE 'directory_access_var_log_audit' IS MISSING!")
# END fix for 'directory_access_var_log_audit'

###############################################################################
# BEGIN fix (105 / 230) for 'audit_rules_session_events'
###############################################################################
(>&2 echo "Remediating rule 105/230: 'audit_rules_session_events'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_session_events' IS MISSING!")
# END fix for 'audit_rules_session_events'

###############################################################################
# BEGIN fix (106 / 230) for 'audit_rules_media_export'
###############################################################################
(>&2 echo "Remediating rule 106/230: 'audit_rules_media_export'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_media_export' IS MISSING!")
# END fix for 'audit_rules_media_export'

###############################################################################
# BEGIN fix (107 / 230) for 'file_ownership_var_log_audit'
###############################################################################
(>&2 echo "Remediating rule 107/230: 'file_ownership_var_log_audit'")

if LC_ALL=C grep -m 1 -q ^log_group /etc/audit/auditd.conf; then
  GROUP=$(awk -F "=" '/log_group/ {print $2}' /etc/audit/auditd.conf | tr -d ' ')
  if ! [ "${GROUP}" == 'root' ] ; then
    chown root.${GROUP} /var/log/audit
    chown root.${GROUP} /var/log/audit/audit.log*
  else
    chown root.root /var/log/audit
    chown root.root /var/log/audit/audit.log*
  fi
else
  chown root.root /var/log/audit
  chown root.root /var/log/audit/audit.log*
fi
# END fix for 'file_ownership_var_log_audit'

###############################################################################
# BEGIN fix (108 / 230) for 'audit_rules_usergroup_modification_opasswd'
###############################################################################
(>&2 echo "Remediating rule 108/230: 'audit_rules_usergroup_modification_opasswd'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_usergroup_modification_opasswd' IS MISSING!")
# END fix for 'audit_rules_usergroup_modification_opasswd'

###############################################################################
# BEGIN fix (109 / 230) for 'audit_rules_mac_modification'
###############################################################################
(>&2 echo "Remediating rule 109/230: 'audit_rules_mac_modification'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_mac_modification' IS MISSING!")
# END fix for 'audit_rules_mac_modification'

###############################################################################
# BEGIN fix (110 / 230) for 'file_permissions_var_log_audit'
###############################################################################
(>&2 echo "Remediating rule 110/230: 'file_permissions_var_log_audit'")
(>&2 echo "FIX FOR THIS RULE 'file_permissions_var_log_audit' IS MISSING!")
# END fix for 'file_permissions_var_log_audit'

###############################################################################
# BEGIN fix (111 / 230) for 'audit_rules_usergroup_modification_gshadow'
###############################################################################
(>&2 echo "Remediating rule 111/230: 'audit_rules_usergroup_modification_gshadow'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_usergroup_modification_gshadow' IS MISSING!")
# END fix for 'audit_rules_usergroup_modification_gshadow'

###############################################################################
# BEGIN fix (112 / 230) for 'audit_rules_etc_gshadow_open'
###############################################################################
(>&2 echo "Remediating rule 112/230: 'audit_rules_etc_gshadow_open'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_gshadow_open' IS MISSING!")
# END fix for 'audit_rules_etc_gshadow_open'

###############################################################################
# BEGIN fix (113 / 230) for 'audit_rules_etc_shadow_openat'
###############################################################################
(>&2 echo "Remediating rule 113/230: 'audit_rules_etc_shadow_openat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_etc_shadow_openat' IS MISSING!")
# END fix for 'audit_rules_etc_shadow_openat'

###############################################################################
# BEGIN fix (114 / 230) for 'audit_rules_usergroup_modification_passwd'
###############################################################################
(>&2 echo "Remediating rule 114/230: 'audit_rules_usergroup_modification_passwd'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_usergroup_modification_passwd' IS MISSING!")
# END fix for 'audit_rules_usergroup_modification_passwd'

###############################################################################
# BEGIN fix (115 / 230) for 'audit_rules_usergroup_modification_group'
###############################################################################
(>&2 echo "Remediating rule 115/230: 'audit_rules_usergroup_modification_group'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_usergroup_modification_group' IS MISSING!")
# END fix for 'audit_rules_usergroup_modification_group'

###############################################################################
# BEGIN fix (116 / 230) for 'audit_rules_kernel_module_loading_finit'
###############################################################################
(>&2 echo "Remediating rule 116/230: 'audit_rules_kernel_module_loading_finit'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_kernel_module_loading_finit' IS MISSING!")
# END fix for 'audit_rules_kernel_module_loading_finit'

###############################################################################
# BEGIN fix (117 / 230) for 'audit_rules_kernel_module_loading_init'
###############################################################################
(>&2 echo "Remediating rule 117/230: 'audit_rules_kernel_module_loading_init'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_kernel_module_loading_init' IS MISSING!")
# END fix for 'audit_rules_kernel_module_loading_init'

###############################################################################
# BEGIN fix (118 / 230) for 'audit_rules_kernel_module_loading_delete'
###############################################################################
(>&2 echo "Remediating rule 118/230: 'audit_rules_kernel_module_loading_delete'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_kernel_module_loading_delete' IS MISSING!")
# END fix for 'audit_rules_kernel_module_loading_delete'

###############################################################################
# BEGIN fix (119 / 230) for 'audit_rules_login_events_lastlog'
###############################################################################
(>&2 echo "Remediating rule 119/230: 'audit_rules_login_events_lastlog'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_login_events_lastlog' IS MISSING!")
# END fix for 'audit_rules_login_events_lastlog'

###############################################################################
# BEGIN fix (120 / 230) for 'audit_rules_login_events_faillock'
###############################################################################
(>&2 echo "Remediating rule 120/230: 'audit_rules_login_events_faillock'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_login_events_faillock' IS MISSING!")
# END fix for 'audit_rules_login_events_faillock'

###############################################################################
# BEGIN fix (121 / 230) for 'audit_rules_login_events_tallylog'
###############################################################################
(>&2 echo "Remediating rule 121/230: 'audit_rules_login_events_tallylog'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_login_events_tallylog' IS MISSING!")
# END fix for 'audit_rules_login_events_tallylog'

###############################################################################
# BEGIN fix (122 / 230) for 'audit_rules_time_stime'
###############################################################################
(>&2 echo "Remediating rule 122/230: 'audit_rules_time_stime'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_time_stime' IS MISSING!")
# END fix for 'audit_rules_time_stime'

###############################################################################
# BEGIN fix (123 / 230) for 'audit_rules_time_settimeofday'
###############################################################################
(>&2 echo "Remediating rule 123/230: 'audit_rules_time_settimeofday'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_time_settimeofday' IS MISSING!")
# END fix for 'audit_rules_time_settimeofday'

###############################################################################
# BEGIN fix (124 / 230) for 'audit_rules_time_watch_localtime'
###############################################################################
(>&2 echo "Remediating rule 124/230: 'audit_rules_time_watch_localtime'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_time_watch_localtime' IS MISSING!")
# END fix for 'audit_rules_time_watch_localtime'

###############################################################################
# BEGIN fix (125 / 230) for 'audit_rules_time_clock_settime'
###############################################################################
(>&2 echo "Remediating rule 125/230: 'audit_rules_time_clock_settime'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_time_clock_settime' IS MISSING!")
# END fix for 'audit_rules_time_clock_settime'

###############################################################################
# BEGIN fix (126 / 230) for 'audit_rules_time_adjtimex'
###############################################################################
(>&2 echo "Remediating rule 126/230: 'audit_rules_time_adjtimex'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_time_adjtimex' IS MISSING!")
# END fix for 'audit_rules_time_adjtimex'

###############################################################################
# BEGIN fix (127 / 230) for 'audit_rules_dac_modification_fchown'
###############################################################################
(>&2 echo "Remediating rule 127/230: 'audit_rules_dac_modification_fchown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_fchown' IS MISSING!")
# END fix for 'audit_rules_dac_modification_fchown'

###############################################################################
# BEGIN fix (128 / 230) for 'audit_rules_dac_modification_setxattr'
###############################################################################
(>&2 echo "Remediating rule 128/230: 'audit_rules_dac_modification_setxattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_setxattr' IS MISSING!")
# END fix for 'audit_rules_dac_modification_setxattr'

###############################################################################
# BEGIN fix (129 / 230) for 'audit_rules_dac_modification_chown'
###############################################################################
(>&2 echo "Remediating rule 129/230: 'audit_rules_dac_modification_chown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_chown' IS MISSING!")
# END fix for 'audit_rules_dac_modification_chown'

###############################################################################
# BEGIN fix (130 / 230) for 'audit_rules_dac_modification_fchownat'
###############################################################################
(>&2 echo "Remediating rule 130/230: 'audit_rules_dac_modification_fchownat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_fchownat' IS MISSING!")
# END fix for 'audit_rules_dac_modification_fchownat'

###############################################################################
# BEGIN fix (131 / 230) for 'audit_rules_dac_modification_chmod'
###############################################################################
(>&2 echo "Remediating rule 131/230: 'audit_rules_dac_modification_chmod'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_chmod' IS MISSING!")
# END fix for 'audit_rules_dac_modification_chmod'

###############################################################################
# BEGIN fix (132 / 230) for 'audit_rules_dac_modification_removexattr'
###############################################################################
(>&2 echo "Remediating rule 132/230: 'audit_rules_dac_modification_removexattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_removexattr' IS MISSING!")
# END fix for 'audit_rules_dac_modification_removexattr'

###############################################################################
# BEGIN fix (133 / 230) for 'audit_rules_dac_modification_fchmod'
###############################################################################
(>&2 echo "Remediating rule 133/230: 'audit_rules_dac_modification_fchmod'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_fchmod' IS MISSING!")
# END fix for 'audit_rules_dac_modification_fchmod'

###############################################################################
# BEGIN fix (134 / 230) for 'audit_rules_dac_modification_lsetxattr'
###############################################################################
(>&2 echo "Remediating rule 134/230: 'audit_rules_dac_modification_lsetxattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_lsetxattr' IS MISSING!")
# END fix for 'audit_rules_dac_modification_lsetxattr'

###############################################################################
# BEGIN fix (135 / 230) for 'audit_rules_dac_modification_fremovexattr'
###############################################################################
(>&2 echo "Remediating rule 135/230: 'audit_rules_dac_modification_fremovexattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_fremovexattr' IS MISSING!")
# END fix for 'audit_rules_dac_modification_fremovexattr'

###############################################################################
# BEGIN fix (136 / 230) for 'audit_rules_dac_modification_lchown'
###############################################################################
(>&2 echo "Remediating rule 136/230: 'audit_rules_dac_modification_lchown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_lchown' IS MISSING!")
# END fix for 'audit_rules_dac_modification_lchown'

###############################################################################
# BEGIN fix (137 / 230) for 'audit_rules_dac_modification_fsetxattr'
###############################################################################
(>&2 echo "Remediating rule 137/230: 'audit_rules_dac_modification_fsetxattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_fsetxattr' IS MISSING!")
# END fix for 'audit_rules_dac_modification_fsetxattr'

###############################################################################
# BEGIN fix (138 / 230) for 'audit_rules_dac_modification_fchmodat'
###############################################################################
(>&2 echo "Remediating rule 138/230: 'audit_rules_dac_modification_fchmodat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_fchmodat' IS MISSING!")
# END fix for 'audit_rules_dac_modification_fchmodat'

###############################################################################
# BEGIN fix (139 / 230) for 'audit_rules_dac_modification_lremovexattr'
###############################################################################
(>&2 echo "Remediating rule 139/230: 'audit_rules_dac_modification_lremovexattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_dac_modification_lremovexattr' IS MISSING!")
# END fix for 'audit_rules_dac_modification_lremovexattr'

###############################################################################
# BEGIN fix (140 / 230) for 'audit_rules_unsuccessful_file_modification_renameat'
###############################################################################
(>&2 echo "Remediating rule 140/230: 'audit_rules_unsuccessful_file_modification_renameat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_renameat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_renameat'

###############################################################################
# BEGIN fix (141 / 230) for 'audit_rules_unsuccessful_file_modification_chmod'
###############################################################################
(>&2 echo "Remediating rule 141/230: 'audit_rules_unsuccessful_file_modification_chmod'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_chmod' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_chmod'

###############################################################################
# BEGIN fix (142 / 230) for 'audit_rules_unsuccessful_file_modification_open_o_trunc_write'
###############################################################################
(>&2 echo "Remediating rule 142/230: 'audit_rules_unsuccessful_file_modification_open_o_trunc_write'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_o_trunc_write' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_o_trunc_write'

###############################################################################
# BEGIN fix (143 / 230) for 'audit_rules_unsuccessful_file_modification_fchownat'
###############################################################################
(>&2 echo "Remediating rule 143/230: 'audit_rules_unsuccessful_file_modification_fchownat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_fchownat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_fchownat'

###############################################################################
# BEGIN fix (144 / 230) for 'audit_rules_unsuccessful_file_modification_openat_o_creat'
###############################################################################
(>&2 echo "Remediating rule 144/230: 'audit_rules_unsuccessful_file_modification_openat_o_creat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_openat_o_creat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_openat_o_creat'

###############################################################################
# BEGIN fix (145 / 230) for 'audit_rules_unsuccessful_file_modification_lchown'
###############################################################################
(>&2 echo "Remediating rule 145/230: 'audit_rules_unsuccessful_file_modification_lchown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_lchown' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_lchown'

###############################################################################
# BEGIN fix (146 / 230) for 'audit_rules_unsuccessful_file_modification_truncate'
###############################################################################
(>&2 echo "Remediating rule 146/230: 'audit_rules_unsuccessful_file_modification_truncate'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_truncate' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_truncate'

###############################################################################
# BEGIN fix (147 / 230) for 'audit_rules_unsuccessful_file_modification_removexattr'
###############################################################################
(>&2 echo "Remediating rule 147/230: 'audit_rules_unsuccessful_file_modification_removexattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_removexattr' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_removexattr'

###############################################################################
# BEGIN fix (148 / 230) for 'audit_rules_unsuccessful_file_modification_chown'
###############################################################################
(>&2 echo "Remediating rule 148/230: 'audit_rules_unsuccessful_file_modification_chown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_chown' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_chown'

###############################################################################
# BEGIN fix (149 / 230) for 'audit_rules_unsuccessful_file_modification_fchown'
###############################################################################
(>&2 echo "Remediating rule 149/230: 'audit_rules_unsuccessful_file_modification_fchown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_fchown' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_fchown'

###############################################################################
# BEGIN fix (150 / 230) for 'audit_rules_unsuccessful_file_modification_fchmodat'
###############################################################################
(>&2 echo "Remediating rule 150/230: 'audit_rules_unsuccessful_file_modification_fchmodat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_fchmodat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_fchmodat'

###############################################################################
# BEGIN fix (151 / 230) for 'audit_rules_unsuccessful_file_modification_setxattr'
###############################################################################
(>&2 echo "Remediating rule 151/230: 'audit_rules_unsuccessful_file_modification_setxattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_setxattr' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_setxattr'

###############################################################################
# BEGIN fix (152 / 230) for 'audit_rules_unsuccessful_file_modification_lremovexattr'
###############################################################################
(>&2 echo "Remediating rule 152/230: 'audit_rules_unsuccessful_file_modification_lremovexattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_lremovexattr' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_lremovexattr'

###############################################################################
# BEGIN fix (153 / 230) for 'audit_rules_unsuccessful_file_modification_creat'
###############################################################################
(>&2 echo "Remediating rule 153/230: 'audit_rules_unsuccessful_file_modification_creat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_creat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_creat'

###############################################################################
# BEGIN fix (154 / 230) for 'audit_rules_unsuccessful_file_modification_open_o_creat'
###############################################################################
(>&2 echo "Remediating rule 154/230: 'audit_rules_unsuccessful_file_modification_open_o_creat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_o_creat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_o_creat'

###############################################################################
# BEGIN fix (155 / 230) for 'audit_rules_unsuccessful_file_modification_fremovexattr'
###############################################################################
(>&2 echo "Remediating rule 155/230: 'audit_rules_unsuccessful_file_modification_fremovexattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_fremovexattr' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_fremovexattr'

###############################################################################
# BEGIN fix (156 / 230) for 'audit_rules_unsuccessful_file_modification_unlink'
###############################################################################
(>&2 echo "Remediating rule 156/230: 'audit_rules_unsuccessful_file_modification_unlink'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_unlink' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_unlink'

###############################################################################
# BEGIN fix (157 / 230) for 'audit_rules_unsuccessful_file_modification_fsetxattr'
###############################################################################
(>&2 echo "Remediating rule 157/230: 'audit_rules_unsuccessful_file_modification_fsetxattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_fsetxattr' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_fsetxattr'

###############################################################################
# BEGIN fix (158 / 230) for 'audit_rules_unsuccessful_file_modification_openat_rule_order'
###############################################################################
(>&2 echo "Remediating rule 158/230: 'audit_rules_unsuccessful_file_modification_openat_rule_order'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_openat_rule_order' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_openat_rule_order'

###############################################################################
# BEGIN fix (159 / 230) for 'audit_rules_unsuccessful_file_modification_open_rule_order'
###############################################################################
(>&2 echo "Remediating rule 159/230: 'audit_rules_unsuccessful_file_modification_open_rule_order'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_rule_order' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_rule_order'

###############################################################################
# BEGIN fix (160 / 230) for 'audit_rules_unsuccessful_file_modification_open'
###############################################################################
(>&2 echo "Remediating rule 160/230: 'audit_rules_unsuccessful_file_modification_open'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open'

###############################################################################
# BEGIN fix (161 / 230) for 'audit_rules_unsuccessful_file_modification_lsetxattr'
###############################################################################
(>&2 echo "Remediating rule 161/230: 'audit_rules_unsuccessful_file_modification_lsetxattr'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_lsetxattr' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_lsetxattr'

###############################################################################
# BEGIN fix (162 / 230) for 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat'
###############################################################################
(>&2 echo "Remediating rule 162/230: 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat'

###############################################################################
# BEGIN fix (163 / 230) for 'audit_rules_unsuccessful_file_modification_open_by_handle_at'
###############################################################################
(>&2 echo "Remediating rule 163/230: 'audit_rules_unsuccessful_file_modification_open_by_handle_at'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_by_handle_at' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_by_handle_at'

###############################################################################
# BEGIN fix (164 / 230) for 'audit_rules_unsuccessful_file_modification_ftruncate'
###############################################################################
(>&2 echo "Remediating rule 164/230: 'audit_rules_unsuccessful_file_modification_ftruncate'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_ftruncate' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_ftruncate'

###############################################################################
# BEGIN fix (165 / 230) for 'audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order'
###############################################################################
(>&2 echo "Remediating rule 165/230: 'audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_by_handle_at_rule_order'

###############################################################################
# BEGIN fix (166 / 230) for 'audit_rules_unsuccessful_file_modification_unlinkat'
###############################################################################
(>&2 echo "Remediating rule 166/230: 'audit_rules_unsuccessful_file_modification_unlinkat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_unlinkat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_unlinkat'

###############################################################################
# BEGIN fix (167 / 230) for 'audit_rules_unsuccessful_file_modification_openat_o_trunc_write'
###############################################################################
(>&2 echo "Remediating rule 167/230: 'audit_rules_unsuccessful_file_modification_openat_o_trunc_write'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_openat_o_trunc_write' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_openat_o_trunc_write'

###############################################################################
# BEGIN fix (168 / 230) for 'audit_rules_unsuccessful_file_modification_fchmod'
###############################################################################
(>&2 echo "Remediating rule 168/230: 'audit_rules_unsuccessful_file_modification_fchmod'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_fchmod' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_fchmod'

###############################################################################
# BEGIN fix (169 / 230) for 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write'
###############################################################################
(>&2 echo "Remediating rule 169/230: 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write'

###############################################################################
# BEGIN fix (170 / 230) for 'audit_rules_unsuccessful_file_modification_openat'
###############################################################################
(>&2 echo "Remediating rule 170/230: 'audit_rules_unsuccessful_file_modification_openat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_openat' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_openat'

###############################################################################
# BEGIN fix (171 / 230) for 'audit_rules_unsuccessful_file_modification_rename'
###############################################################################
(>&2 echo "Remediating rule 171/230: 'audit_rules_unsuccessful_file_modification_rename'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_unsuccessful_file_modification_rename' IS MISSING!")
# END fix for 'audit_rules_unsuccessful_file_modification_rename'

###############################################################################
# BEGIN fix (172 / 230) for 'audit_rules_execution_seunshare'
###############################################################################
(>&2 echo "Remediating rule 172/230: 'audit_rules_execution_seunshare'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_execution_seunshare' IS MISSING!")
# END fix for 'audit_rules_execution_seunshare'

###############################################################################
# BEGIN fix (173 / 230) for 'audit_rules_execution_setfiles'
###############################################################################
(>&2 echo "Remediating rule 173/230: 'audit_rules_execution_setfiles'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_execution_setfiles' IS MISSING!")
# END fix for 'audit_rules_execution_setfiles'

###############################################################################
# BEGIN fix (174 / 230) for 'audit_rules_execution_setsebool'
###############################################################################
(>&2 echo "Remediating rule 174/230: 'audit_rules_execution_setsebool'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_execution_setsebool' IS MISSING!")
# END fix for 'audit_rules_execution_setsebool'

###############################################################################
# BEGIN fix (175 / 230) for 'audit_rules_execution_semanage'
###############################################################################
(>&2 echo "Remediating rule 175/230: 'audit_rules_execution_semanage'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_execution_semanage' IS MISSING!")
# END fix for 'audit_rules_execution_semanage'

###############################################################################
# BEGIN fix (176 / 230) for 'audit_rules_execution_chcon'
###############################################################################
(>&2 echo "Remediating rule 176/230: 'audit_rules_execution_chcon'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_execution_chcon' IS MISSING!")
# END fix for 'audit_rules_execution_chcon'

###############################################################################
# BEGIN fix (177 / 230) for 'audit_rules_execution_restorecon'
###############################################################################
(>&2 echo "Remediating rule 177/230: 'audit_rules_execution_restorecon'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_execution_restorecon' IS MISSING!")
# END fix for 'audit_rules_execution_restorecon'

###############################################################################
# BEGIN fix (178 / 230) for 'audit_rules_file_deletion_events_rmdir'
###############################################################################
(>&2 echo "Remediating rule 178/230: 'audit_rules_file_deletion_events_rmdir'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_file_deletion_events_rmdir' IS MISSING!")
# END fix for 'audit_rules_file_deletion_events_rmdir'

###############################################################################
# BEGIN fix (179 / 230) for 'audit_rules_file_deletion_events_unlinkat'
###############################################################################
(>&2 echo "Remediating rule 179/230: 'audit_rules_file_deletion_events_unlinkat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_file_deletion_events_unlinkat' IS MISSING!")
# END fix for 'audit_rules_file_deletion_events_unlinkat'

###############################################################################
# BEGIN fix (180 / 230) for 'audit_rules_file_deletion_events_rename'
###############################################################################
(>&2 echo "Remediating rule 180/230: 'audit_rules_file_deletion_events_rename'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_file_deletion_events_rename' IS MISSING!")
# END fix for 'audit_rules_file_deletion_events_rename'

###############################################################################
# BEGIN fix (181 / 230) for 'audit_rules_file_deletion_events_renameat'
###############################################################################
(>&2 echo "Remediating rule 181/230: 'audit_rules_file_deletion_events_renameat'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_file_deletion_events_renameat' IS MISSING!")
# END fix for 'audit_rules_file_deletion_events_renameat'

###############################################################################
# BEGIN fix (182 / 230) for 'audit_rules_file_deletion_events_unlink'
###############################################################################
(>&2 echo "Remediating rule 182/230: 'audit_rules_file_deletion_events_unlink'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_file_deletion_events_unlink' IS MISSING!")
# END fix for 'audit_rules_file_deletion_events_unlink'

###############################################################################
# BEGIN fix (183 / 230) for 'audit_rules_privileged_commands_passwd'
###############################################################################
(>&2 echo "Remediating rule 183/230: 'audit_rules_privileged_commands_passwd'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_passwd' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_passwd'

###############################################################################
# BEGIN fix (184 / 230) for 'audit_rules_privileged_commands_sudo'
###############################################################################
(>&2 echo "Remediating rule 184/230: 'audit_rules_privileged_commands_sudo'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_sudo' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_sudo'

###############################################################################
# BEGIN fix (185 / 230) for 'audit_rules_privileged_commands_usernetctl'
###############################################################################
(>&2 echo "Remediating rule 185/230: 'audit_rules_privileged_commands_usernetctl'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_usernetctl' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_usernetctl'

###############################################################################
# BEGIN fix (186 / 230) for 'audit_rules_privileged_commands_postdrop'
###############################################################################
(>&2 echo "Remediating rule 186/230: 'audit_rules_privileged_commands_postdrop'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_postdrop' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_postdrop'

###############################################################################
# BEGIN fix (187 / 230) for 'audit_rules_privileged_commands_chsh'
###############################################################################
(>&2 echo "Remediating rule 187/230: 'audit_rules_privileged_commands_chsh'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_chsh' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_chsh'

###############################################################################
# BEGIN fix (188 / 230) for 'audit_rules_privileged_commands_newgidmap'
###############################################################################
(>&2 echo "Remediating rule 188/230: 'audit_rules_privileged_commands_newgidmap'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_newgidmap' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_newgidmap'

###############################################################################
# BEGIN fix (189 / 230) for 'audit_rules_privileged_commands_gpasswd'
###############################################################################
(>&2 echo "Remediating rule 189/230: 'audit_rules_privileged_commands_gpasswd'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_gpasswd' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_gpasswd'

###############################################################################
# BEGIN fix (190 / 230) for 'audit_rules_privileged_commands_chage'
###############################################################################
(>&2 echo "Remediating rule 190/230: 'audit_rules_privileged_commands_chage'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_chage' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_chage'

###############################################################################
# BEGIN fix (191 / 230) for 'audit_rules_privileged_commands_userhelper'
###############################################################################
(>&2 echo "Remediating rule 191/230: 'audit_rules_privileged_commands_userhelper'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_userhelper' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_userhelper'

###############################################################################
# BEGIN fix (192 / 230) for 'audit_rules_privileged_commands_at'
###############################################################################
(>&2 echo "Remediating rule 192/230: 'audit_rules_privileged_commands_at'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_at' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_at'

###############################################################################
# BEGIN fix (193 / 230) for 'audit_rules_privileged_commands_pam_timestamp_check'
###############################################################################
(>&2 echo "Remediating rule 193/230: 'audit_rules_privileged_commands_pam_timestamp_check'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_pam_timestamp_check' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_pam_timestamp_check'

###############################################################################
# BEGIN fix (194 / 230) for 'audit_rules_privileged_commands_crontab'
###############################################################################
(>&2 echo "Remediating rule 194/230: 'audit_rules_privileged_commands_crontab'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_crontab' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_crontab'

###############################################################################
# BEGIN fix (195 / 230) for 'audit_rules_privileged_commands_umount'
###############################################################################
(>&2 echo "Remediating rule 195/230: 'audit_rules_privileged_commands_umount'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_umount' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_umount'

###############################################################################
# BEGIN fix (196 / 230) for 'audit_rules_privileged_commands_unix_chkpwd'
###############################################################################
(>&2 echo "Remediating rule 196/230: 'audit_rules_privileged_commands_unix_chkpwd'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_unix_chkpwd' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_unix_chkpwd'

###############################################################################
# BEGIN fix (197 / 230) for 'audit_rules_privileged_commands_pt_chown'
###############################################################################
(>&2 echo "Remediating rule 197/230: 'audit_rules_privileged_commands_pt_chown'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_pt_chown' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_pt_chown'

###############################################################################
# BEGIN fix (198 / 230) for 'audit_rules_privileged_commands_ssh_keysign'
###############################################################################
(>&2 echo "Remediating rule 198/230: 'audit_rules_privileged_commands_ssh_keysign'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_ssh_keysign' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_ssh_keysign'

###############################################################################
# BEGIN fix (199 / 230) for 'audit_rules_privileged_commands_sudoedit'
###############################################################################
(>&2 echo "Remediating rule 199/230: 'audit_rules_privileged_commands_sudoedit'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_sudoedit' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_sudoedit'

###############################################################################
# BEGIN fix (200 / 230) for 'audit_rules_privileged_commands_mount'
###############################################################################
(>&2 echo "Remediating rule 200/230: 'audit_rules_privileged_commands_mount'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_mount' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_mount'

###############################################################################
# BEGIN fix (201 / 230) for 'audit_rules_privileged_commands_newuidmap'
###############################################################################
(>&2 echo "Remediating rule 201/230: 'audit_rules_privileged_commands_newuidmap'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_newuidmap' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_newuidmap'

###############################################################################
# BEGIN fix (202 / 230) for 'audit_rules_privileged_commands_postqueue'
###############################################################################
(>&2 echo "Remediating rule 202/230: 'audit_rules_privileged_commands_postqueue'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_postqueue' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_postqueue'

###############################################################################
# BEGIN fix (203 / 230) for 'audit_rules_privileged_commands'
###############################################################################
(>&2 echo "Remediating rule 203/230: 'audit_rules_privileged_commands'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands' IS MISSING!")
# END fix for 'audit_rules_privileged_commands'

###############################################################################
# BEGIN fix (204 / 230) for 'audit_rules_privileged_commands_su'
###############################################################################
(>&2 echo "Remediating rule 204/230: 'audit_rules_privileged_commands_su'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_su' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_su'

###############################################################################
# BEGIN fix (205 / 230) for 'audit_rules_privileged_commands_newgrp'
###############################################################################
(>&2 echo "Remediating rule 205/230: 'audit_rules_privileged_commands_newgrp'")
(>&2 echo "FIX FOR THIS RULE 'audit_rules_privileged_commands_newgrp' IS MISSING!")
# END fix for 'audit_rules_privileged_commands_newgrp'

###############################################################################
# BEGIN fix (206 / 230) for 'package_sudo_installed'
###############################################################################
(>&2 echo "Remediating rule 206/230: 'package_sudo_installed'")
(>&2 echo "FIX FOR THIS RULE 'package_sudo_installed' IS MISSING!")
# END fix for 'package_sudo_installed'

###############################################################################
# BEGIN fix (207 / 230) for 'enable_dracut_fips_module'
###############################################################################
(>&2 echo "Remediating rule 207/230: 'enable_dracut_fips_module'")
(>&2 echo "FIX FOR THIS RULE 'enable_dracut_fips_module' IS MISSING!")
# END fix for 'enable_dracut_fips_module'

###############################################################################
# BEGIN fix (208 / 230) for 'enable_fips_mode'
###############################################################################
(>&2 echo "Remediating rule 208/230: 'enable_fips_mode'")
(>&2 echo "FIX FOR THIS RULE 'enable_fips_mode' IS MISSING!")
# END fix for 'enable_fips_mode'

###############################################################################
# BEGIN fix (209 / 230) for 'configure_openssl_crypto_policy'
###############################################################################
(>&2 echo "Remediating rule 209/230: 'configure_openssl_crypto_policy'")
(>&2 echo "FIX FOR THIS RULE 'configure_openssl_crypto_policy' IS MISSING!")
# END fix for 'configure_openssl_crypto_policy'

###############################################################################
# BEGIN fix (210 / 230) for 'harden_sshd_crypto_policy'
###############################################################################
(>&2 echo "Remediating rule 210/230: 'harden_sshd_crypto_policy'")
(>&2 echo "FIX FOR THIS RULE 'harden_sshd_crypto_policy' IS MISSING!")
# END fix for 'harden_sshd_crypto_policy'

###############################################################################
# BEGIN fix (211 / 230) for 'configure_kerberos_crypto_policy'
###############################################################################
(>&2 echo "Remediating rule 211/230: 'configure_kerberos_crypto_policy'")
(>&2 echo "FIX FOR THIS RULE 'configure_kerberos_crypto_policy' IS MISSING!")
# END fix for 'configure_kerberos_crypto_policy'

###############################################################################
# BEGIN fix (212 / 230) for 'configure_crypto_policy'
###############################################################################
(>&2 echo "Remediating rule 212/230: 'configure_crypto_policy'")
(>&2 echo "FIX FOR THIS RULE 'configure_crypto_policy' IS MISSING!")
# END fix for 'configure_crypto_policy'

###############################################################################
# BEGIN fix (213 / 230) for 'harden_ssh_client_crypto_policy'
###############################################################################
(>&2 echo "Remediating rule 213/230: 'harden_ssh_client_crypto_policy'")
(>&2 echo "FIX FOR THIS RULE 'harden_ssh_client_crypto_policy' IS MISSING!")
# END fix for 'harden_ssh_client_crypto_policy'

###############################################################################
# BEGIN fix (214 / 230) for 'package_aide_installed'
###############################################################################
(>&2 echo "Remediating rule 214/230: 'package_aide_installed'")
(>&2 echo "FIX FOR THIS RULE 'package_aide_installed' IS MISSING!")
# END fix for 'package_aide_installed'

###############################################################################
# BEGIN fix (215 / 230) for 'package_usbguard_installed'
###############################################################################
(>&2 echo "Remediating rule 215/230: 'package_usbguard_installed'")
(>&2 echo "FIX FOR THIS RULE 'package_usbguard_installed' IS MISSING!")
# END fix for 'package_usbguard_installed'

###############################################################################
# BEGIN fix (216 / 230) for 'service_usbguard_enabled'
###############################################################################
(>&2 echo "Remediating rule 216/230: 'service_usbguard_enabled'")
(>&2 echo "FIX FOR THIS RULE 'service_usbguard_enabled' IS MISSING!")
# END fix for 'service_usbguard_enabled'

###############################################################################
# BEGIN fix (217 / 230) for 'configure_usbguard_auditbackend'
###############################################################################
(>&2 echo "Remediating rule 217/230: 'configure_usbguard_auditbackend'")
if [ -e "/etc/usbguard/usbguard-daemon.conf" ] ; then
    LC_ALL=C sed -i "/^\s*AuditBackend=/d" "/etc/usbguard/usbguard-daemon.conf"
else
    touch "/etc/usbguard/usbguard-daemon.conf"
fi
cp "/etc/usbguard/usbguard-daemon.conf" "/etc/usbguard/usbguard-daemon.conf.bak"
# Insert at the end of the file
printf '%s\n' "AuditBackend=LinuxAudit" >> "/etc/usbguard/usbguard-daemon.conf"
# Clean up after ourselves.
rm "/etc/usbguard/usbguard-daemon.conf.bak"
# END fix for 'configure_usbguard_auditbackend'

###############################################################################
# BEGIN fix (218 / 230) for 'usbguard_allow_hid_and_hub'
###############################################################################
(>&2 echo "Remediating rule 218/230: 'usbguard_allow_hid_and_hub'")
(>&2 echo "FIX FOR THIS RULE 'usbguard_allow_hid_and_hub' IS MISSING!")
# END fix for 'usbguard_allow_hid_and_hub'

###############################################################################
# BEGIN fix (219 / 230) for 'sssd_run_as_sssd_user'
###############################################################################
(>&2 echo "Remediating rule 219/230: 'sssd_run_as_sssd_user'")
(>&2 echo "FIX FOR THIS RULE 'sssd_run_as_sssd_user' IS MISSING!")
# END fix for 'sssd_run_as_sssd_user'

###############################################################################
# BEGIN fix (220 / 230) for 'service_chronyd_or_ntpd_enabled'
###############################################################################
(>&2 echo "Remediating rule 220/230: 'service_chronyd_or_ntpd_enabled'")
(>&2 echo "FIX FOR THIS RULE 'service_chronyd_or_ntpd_enabled' IS MISSING!")
# END fix for 'service_chronyd_or_ntpd_enabled'

###############################################################################
# BEGIN fix (221 / 230) for 'chronyd_or_ntpd_specify_multiple_servers'
###############################################################################
(>&2 echo "Remediating rule 221/230: 'chronyd_or_ntpd_specify_multiple_servers'")
(>&2 echo "FIX FOR THIS RULE 'chronyd_or_ntpd_specify_multiple_servers' IS MISSING!")
# END fix for 'chronyd_or_ntpd_specify_multiple_servers'

###############################################################################
# BEGIN fix (222 / 230) for 'chronyd_client_only'
###############################################################################
(>&2 echo "Remediating rule 222/230: 'chronyd_client_only'")
(>&2 echo "FIX FOR THIS RULE 'chronyd_client_only' IS MISSING!")
# END fix for 'chronyd_client_only'

###############################################################################
# BEGIN fix (223 / 230) for 'chronyd_or_ntpd_set_maxpoll'
###############################################################################
(>&2 echo "Remediating rule 223/230: 'chronyd_or_ntpd_set_maxpoll'")
(>&2 echo "FIX FOR THIS RULE 'chronyd_or_ntpd_set_maxpoll' IS MISSING!")
# END fix for 'chronyd_or_ntpd_set_maxpoll'

###############################################################################
# BEGIN fix (224 / 230) for 'chronyd_no_chronyc_network'
###############################################################################
(>&2 echo "Remediating rule 224/230: 'chronyd_no_chronyc_network'")
(>&2 echo "FIX FOR THIS RULE 'chronyd_no_chronyc_network' IS MISSING!")
# END fix for 'chronyd_no_chronyc_network'

###############################################################################
# BEGIN fix (225 / 230) for 'chronyd_or_ntpd_specify_remote_server'
###############################################################################
(>&2 echo "Remediating rule 225/230: 'chronyd_or_ntpd_specify_remote_server'")
(>&2 echo "FIX FOR THIS RULE 'chronyd_or_ntpd_specify_remote_server' IS MISSING!")
# END fix for 'chronyd_or_ntpd_specify_remote_server'

###############################################################################
# BEGIN fix (226 / 230) for 'service_rngd_enabled'
###############################################################################
(>&2 echo "Remediating rule 226/230: 'service_rngd_enabled'")
(>&2 echo "FIX FOR THIS RULE 'service_rngd_enabled' IS MISSING!")
# END fix for 'service_rngd_enabled'

###############################################################################
# BEGIN fix (227 / 230) for 'package_fapolicyd_installed'
###############################################################################
(>&2 echo "Remediating rule 227/230: 'package_fapolicyd_installed'")
(>&2 echo "FIX FOR THIS RULE 'package_fapolicyd_installed' IS MISSING!")
# END fix for 'package_fapolicyd_installed'

###############################################################################
# BEGIN fix (228 / 230) for 'service_fapolicyd_enabled'
###############################################################################
(>&2 echo "Remediating rule 228/230: 'service_fapolicyd_enabled'")
(>&2 echo "FIX FOR THIS RULE 'service_fapolicyd_enabled' IS MISSING!")
# END fix for 'service_fapolicyd_enabled'

###############################################################################
# BEGIN fix (229 / 230) for 'sshd_limit_user_access'
###############################################################################
(>&2 echo "Remediating rule 229/230: 'sshd_limit_user_access'")
(>&2 echo "FIX FOR THIS RULE 'sshd_limit_user_access' IS MISSING!")
# END fix for 'sshd_limit_user_access'

###############################################################################
# BEGIN fix (230 / 230) for 'sshd_disable_rhosts'
###############################################################################
(>&2 echo "Remediating rule 230/230: 'sshd_disable_rhosts'")
if [ -e "/etc/ssh/sshd_config" ] ; then
    LC_ALL=C sed -i "/^\s*IgnoreRhosts\s\+/Id" "/etc/ssh/sshd_config"
else
    touch "/etc/ssh/sshd_config"
fi
cp "/etc/ssh/sshd_config" "/etc/ssh/sshd_config.bak"
# Insert before the line matching the regex '^Match'.
line_number="$(LC_ALL=C grep -n "^Match" "/etc/ssh/sshd_config.bak" | LC_ALL=C sed 's/:.*//g')"
if [ -z "$line_number" ]; then
    # There was no match of '^Match', insert at
    # the end of the file.
    printf '%s\n' "IgnoreRhosts yes" >> "/etc/ssh/sshd_config"
else
    head -n "$(( line_number - 1 ))" "/etc/ssh/sshd_config.bak" > "/etc/ssh/sshd_config"
    printf '%s\n' "IgnoreRhosts yes" >> "/etc/ssh/sshd_config"
    tail -n "+$(( line_number ))" "/etc/ssh/sshd_config.bak" >> "/etc/ssh/sshd_config"
fi
# Clean up after ourselves.
rm "/etc/ssh/sshd_config.bak"
# END fix for 'sshd_disable_rhosts'

